<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <context:component-scan base-package="cn.taotao.controller"/>

    <mvc:annotation-driven conversion-service="stringToDataConverter">
        <mvc:message-converters>
            <!-- 解决Controller返回json中文乱码问题 -->
            <!-- 配置消息转换器的bean -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                        <value>application/xml;charset=UTF-8</value>
                    </list>
                </property>
                <property name="features">
                    <list>
                        <value>WriteDateUseDateFormat</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--自定义全局Data转换器-->
    <!--解决Data类型绑定失败-->
    <bean id="stringToDataConverter" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="cn.taotao.converter.StringToDataConverter">
                    <property name="dataFormats">
                        <array>
                            <value>yyyy-MM-dd HH:mm:ss</value>
                            <value>yyyy-MM-dd</value>
                        </array>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    <!-- 配置多视图解析器，允许同样内容的数据呈现不同的view -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="prefix" value="/WEB-INF/jsp/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
    </bean>

    <!--静态资源文件放行-->
    <!--<mvc:default-servlet-handler />-->
    <mvc:resources location="/WEB-INF/js/" mapping="/js/**"/>
    <mvc:resources location="/WEB-INF/css/" mapping="/css/**"/>
    <!-- &lt;!&ndash;配置全局异常的处理&ndash;&gt;
     <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
         <property name="exceptionMappings">
             <props>
                 <prop key="java.lang.RuntimeException">error</prop>
                 <prop key="java.io.IOException">error</prop>
             </props>
         </property>
     </bean>-->
    <!-- 配置拦截器类 LoginInterceptor.java -->
    <!--<mvc:interceptors>
        <mvc:interceptor>
            &lt;!&ndash; 拦截所有mvc控制器 &ndash;&gt;
            <mvc:mapping path="/**"/>
            &lt;!&ndash; mvc:exclude-mapping是另外一种拦截，它可以在你后来的测试中对某个页面进行不拦截，
            这样就不用在 LoginInterceptor的preHandler方法里面获取不拦截的请求uri地址了(优选) &ndash;&gt;
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/js/**"/>
            <mvc:exclude-mapping path="/login/login"/>
            <mvc:exclude-mapping path="/login/doLogin"/>
            <bean class="cn.smbms.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>-->
    <!--文件上传-->
    <!-- 注意：CommonsMultipartResolver的id是固定不变的，一定是multipartResolver，不可修改 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 如果上传后出现文件名中文乱码可以使用该属性解决 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 单位是字节，不设置默认不限制总的上传文件大小，这里设置总的上传文件大小不超过1M（1*1024*1024） -->
        <!--<property name="maxUploadSize" value="2097152"/>-->
    </bean>
</beans>